rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to get user role from custom claims or Firestore
    function getUserRole() {
      return request.auth.token.role != null ? request.auth.token.role : 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Helper function to check if user is admin or super-admin
    function isAdmin() {
      return getUserRole() in ['admin', 'super-admin'];
    }
    
    // Helper function to check if user is super-admin
    function isSuperAdmin() {
      return getUserRole() == 'super-admin';
    }
    
    // Helper function to check if user is learner
    function isLearner() {
      return getUserRole() == 'learner';
    }

    // Helper function to check if user is applicant
    function isApplicant() {
      return getUserRole() == 'applicant';
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
      // Admins can read all user documents
      allow read: if isAuthenticated() && isAdmin();
      // Super admins can write to any user document
      allow write: if isAuthenticated() && isSuperAdmin();
    }

    // Learner profiles - users can read/write their own, admins can read all
    match /learnerProfiles/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
      allow read: if isAuthenticated() && isAdmin();
    }

    // Placements collection - admins can manage, learners can read their own
    match /placements/{placementId} {
      allow read: if isAuthenticated() && (isAdmin() || isLearner());
      allow write: if isAuthenticated() && isAdmin();
    }

    // Documents collection - users can manage their own documents
    match /documents/{documentId} {
      allow read, write: if isAuthenticated() && 
        (isOwner(resource.data.userId) || isAdmin());
      allow create: if isAuthenticated() && 
        (isOwner(request.resource.data.userId) || isAdmin());
    }

    // Work hours collection - learners can create/read their own, admins can read all
    match /work-hours/{workHourId} {
      allow read, write: if isAuthenticated() && 
        (isOwner(resource.data.learnerId) || isAdmin());
      allow create: if isAuthenticated() && 
        (isOwner(request.resource.data.learnerId) || isAdmin());
    }

    // Attendance collection - learners can create/read their own, admins can read all
    match /attendance/{attendanceId} {
      allow read, write: if isAuthenticated() && 
        (isOwner(resource.data.userId) || isAdmin());
      allow create: if isAuthenticated() && 
        (isOwner(request.resource.data.userId) || isAdmin());
    }

    // Programs collection - admins can manage, all authenticated users can read
    match /programs/{programId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }

    // Applications collection - applicants can manage their own, admins can read all
    match /applications/{applicationId} {
      allow read, write: if isAuthenticated() && 
        (isOwner(resource.data.applicantId) || isAdmin());
      allow create: if isAuthenticated() && 
        (isOwner(request.resource.data.applicantId) || isAdmin());
    }

    // Notifications collection - users can read their own, admins can read all
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
        (isOwner(resource.data.userId) || isAdmin());
      allow write: if isAuthenticated() && isAdmin();
    }

    // Audit logs - only admins can read
    match /audit-logs/{logId} {
      allow read: if isAuthenticated() && isAdmin();
      allow write: if isAuthenticated() && isAdmin();
    }

    // Settings collection - only super admins can manage
    match /settings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isSuperAdmin();
    }

    // Announcements collection - all authenticated users can read, admins can write
    match /announcements/{announcementId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }

    // Chat messages - users can read/write their own conversations
    match /chat-messages/{messageId} {
      allow read, write: if isAuthenticated() && 
        (isOwner(resource.data.senderId) || isOwner(resource.data.receiverId) || isAdmin());
      allow create: if isAuthenticated() && 
        (isOwner(request.resource.data.senderId) || isAdmin());
    }

    // AI reports - admins can read all, learners can read their own
    match /ai-reports/{reportId} {
      allow read: if isAuthenticated() && 
        (isOwner(resource.data.userId) || isAdmin());
      allow write: if isAuthenticated() && isAdmin();
    }

    // Performance metrics - only admins can access
    match /performance-metrics/{metricId} {
      allow read, write: if isAuthenticated() && isAdmin();
    }

    // Security logs - only super admins can access
    match /security-logs/{logId} {
      allow read, write: if isAuthenticated() && isSuperAdmin();
    }
  }
}