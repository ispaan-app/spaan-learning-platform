rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // EMERGENCY RULES - More permissive for immediate access
    // These rules should be replaced with more restrictive ones after fixing the issue
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && (
        request.auth.token.role in ['admin', 'super-admin'] ||
        request.auth.token.email == 'developer@ispaan.com' ||
        request.auth.token.email == 'sifiso@thegaselagroup.co.za' ||
        request.auth.token.email == 'skitzoc9@gmail.com'
      );
    }
    
    function isSuperAdmin() {
      return isAuthenticated() && (
        request.auth.token.role == 'super-admin' ||
        request.auth.token.email == 'developer@ispaan.com' ||
        request.auth.token.email == 'sifiso@thegaselagroup.co.za' ||
        request.auth.token.email == 'skitzoc9@gmail.com'
      );
    }
    
    // Allow all authenticated users to read most collections
    match /{collection}/{document} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isSuperAdmin();
      allow create: if isAuthenticated();
    }
    
    // Specific rules for sensitive collections
    match /auditLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }
    
    match /audit-logs/{logId} {
      allow read, write: if isSuperAdmin();
    }
    
    match /settings/{settingId} {
      allow read, write: if isSuperAdmin();
    }
    
    match /performance/{perfId} {
      allow read, write: if isSuperAdmin();
    }
    
    match /securityLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }
    
    match /active-sessions/{sessionId} {
      allow read, write: if isSuperAdmin();
      allow create: if isAuthenticated();
      allow read, update: if isOwner(resource.data.userId);
    }
  }
}
